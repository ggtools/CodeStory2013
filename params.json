{"name":"Codestory2013","tagline":"Journal de ma participation à CodeStory2013","body":"## Au début …\r\n\r\nIl n'y avait rien. Enfin pas complètement rien car il y avait ça :\r\n\r\n> Chaque développeur […] devra également installer un serveur web public […] l’équipe de CodeStory va poser une question au serveur […] au travers d’une requête http GET. […] La réponse doit être fournie dans le body de la réponse de la requête http.\r\n\r\n> La première question est simple. […] `http://(serveur)/?q=Quelle+est+ton+adresse+email` de votre serveur doit répondre par un document ne contenant que votre adresse email.\r\n\r\nN'ayant pas *a priori* trop de temps à consacrer à Code Story j'ai préféré rester dans le classique : Java 7 & Tomcat. Pour l'hébergement, j'avais ouvert un compte sur [Cloudbees](http:/www.cloudbees.com/) depuis la présentation de [Nicolas De Loof](http://www.loof.fr/) au [BordeauxJUG](http://www.bordeauxjug.org) que j'allais pouvoir mettre à contribution.\r\n\r\n## Premières questions\r\n\r\nL'implémentation des premières questions se fait rapidement en jetant un coup d'œil sur les logs et en ajoutant le couple question/réponse avant de redéployer. Lorsqu'arrive \"`Es tu pret a recevoir une enonce au format markdown par http post(OUI/NON)`\" je pars sur une implémentation minimale (\"use the logs Luke\" me souffle une petite voix dans ma tête).\r\n\r\nCette première partie ne posa pas de problème & ne fut pas chronophage : jusque là tout va bien …\r\n\r\n## L'échoppe de monade sur Scalaskel\r\n\r\nJ'ai commencé pour un rapide refactoring pour introduire l'interface `Resolver`. Ensuite un rapide brainstorming avec moi même pour choisir Jackson pour le formatage du JSon. L'algorithme final est récursif et utilise une enum pour stocker les différentes pièces :\r\n\r\n```java\r\nprotected List<Map<COIN, Integer>> computeChange(COIN currentCoin, int value) {\r\n    if (currentCoin.getValue() == 1) {\r\n        Map<COIN, Integer> changeMap = Maps.newHashMapWithExpectedSize(COIN.values().length);\r\n        addToChange(currentCoin, value, changeMap);\r\n        return Lists.newArrayList(changeMap);\r\n    }\r\n    int maxCoins = value / currentCoin.getValue();\r\n    List<Map<COIN, Integer>> results = Lists.newArrayList();\r\n    for (int i = 0; i <= maxCoins; i++) {\r\n        List<Map<COIN, Integer>> subChanges = computeChange(COIN.values()[currentCoin.ordinal() - 1], value - i * currentCoin.getValue());\r\n        for (Map<COIN, Integer> change : subChanges) {\r\n            addToChange(currentCoin, i, change);\r\n            results.add(change);\r\n        }\r\n    }\r\n    return results;\r\n}\r\n```\r\n\r\nDéploiement, petits coup d'œil aux logs pour surveiller le passage du robot … *yes !* il est passé & visiblement mes résultats sont corrects. Et puis arrive ça : `1 1` … \r\n\r\n## Calculatrice\r\n\r\nSolitude, interrogation avant de me rendre compte qu'il fallait regarder la question **avant** décodage du paramètre. J'ai fait deux implémentation de la calculatrice : une première en utilisant [exp4j](http://www.objecthunter.net/exp4j/index.html) plutôt que Groovy qui ressemblait à un marteau-pillon pour casser une noix. Ça a marché pas trop mal jusqu'à ça :\r\n\r\n    ((1,1+2)+3,14+4+(5+6+7)+(8+9+10)*4267387833344334647677634)/2*553344300034334349999000\r\n\r\nExp4j faisant les calculs avec des doubles j'ai perdu du monde au passage et le robot n'a pas aimé. La solution est bien sûr de passer par `BigDecimal` mais exp4j n'est malheureusement pas conçu autour d'un pattern visitor donc très très difficile de changer la manière dont sont fait les calculs.\r\n\r\nFinalement le marteau-pillon a du bon et Groovy ce sera.\r\n\r\n## Jajascript\r\n\r\nPour le deuxième énoncé je commence par une implémentation récursive et assez naïve (mais qui évite de faire des calculs en double). Les quelques tests donnent des résultats assez satisfaisant en terme de temps de réponse. Le robot étant en RTT le week-end où j'ai codé mon algorithme je me suis lancé confiant dans le codage d'un petit test de performance qui va faire des tests avec un nombre variable de vols. Et là … catastrophe, les temps de réponses deviennent catastrophiques lorsque je dépasse 100 vols. Je ne sais pas encore combien de vols il y aura au maximum mais il va falloir un changement radical d'algorithme. \r\n\r\n### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and we’ll help you sort it out.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}